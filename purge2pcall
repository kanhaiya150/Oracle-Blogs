#!/usr/bin/ksh
#
# Usage :  $0 <sid> 

OSTYPE=$(uname -s)
case $OSTYPE in
"AIX" ) alias bdf="/usr/bin/df -Ik"
        alias ll="/usr/bin/ls -l" ;;
"SunOS") alias bdf="/usr/bin/df -k"
         alias ll="/usr/bin/ls -l"
         alias grep="/usr/xpg4/bin/grep" ;;
esac

if [ "$LOGNAME" != "root" ]
then
	if [ -z "$LOGNAME" ]
	then
		:
	else
        	echo "you must launch this script as root"
        	exit 1
	fi
fi

if [ `bdf /tmp|grep tmp|awk '{print $5}'|tr -d %` -ge 98 ]
then
	echo "File system /tmp is full, before running this job "
	echo "please clear all unecessary files in /tmp"
	exit 1
fi

if [ $# -ne 1 ]
then
        echo "Usage : $0 <instance name>"
        echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
        exit 1
else
        if grep -q "^$1:" /etc/ORATAB
        then
                echo "\nInstance $1 exists in /etc/ORATAB\n"
        else
                echo "Instance <$1> does not exist Please check"
                echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
                exit 1
        fi
fi

export SID=$1

export  USER=`grep "^$SID:" /etc/ORATAB|cut -d: -f4`
export  OHOME=`grep "^$SID:" /etc/ORATAB|cut -d: -f2`

if [ -x $OHOME/bin/svrmgrl ]
then
        VAR3=svrmgrl
        export VAR4="connect internal"
else
        VAR3="sqlplus -s  \"/ as sysdba \" "
        export VAR4="set wrap off"
        export VAR5="set lines 500"
fi
## csh or ksh
if grep "^$USER:" /etc/passwd|grep -q csh$
then
        export VAR="setenv ORACLE_SID ${SID};setenv ORACLE_HOME ${OHOME}"
        export VAR2="$OHOME/bin/$VAR3 <<EOF"
else
        export VAR="ORACLE_SID=${SID};ORACLE_HOME=${OHOME};export ORACLE_SID ORACLE_HOME"
        export VAR2="$OHOME/bin/$VAR3 <<EOF"
fi

su - $USER -c "
$VAR
$VAR2
$VAR4
$VAR5
set serveroutput on
spool /tmp/`basename $0`.log
declare
cursor cursor1 is
select local_tran_id
from dba_2pc_pending;
item1 cursor1%rowtype;
begin
open cursor1;
loop
fetch cursor1 into item1;
exit when cursor1%notfound;
dbms_output.put_line('rollback force ''' || item1.local_tran_id || ''';');
dbms_output.put_line('alter session set "_smu_debug_mode" = 4;');
dbms_output.put_line('execute dbms_transaction.purge_lost_db_entry(''' || item1.local_tran_id || ''');');
dbms_output.put_line('commit;');
end loop;
close cursor1;
end;
/
spool off
EOF
" 1>/dev/null 2>&1

cat /tmp/`basename $0`.log | grep -vi statement > /tmp/`basename $0`.sql

su - $USER -c "
$VAR
$VAR2
$VAR4
$VAR5
@/tmp/`basename $0`.sql
EOF
" 1>/dev/null 2>&1

rm -f /tmp/`basename $0`.log
rm -f /tmp/`basename $0`.sql
