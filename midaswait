# Usage :  progname <SID>

OSTYPE=$(uname -s)
case $OSTYPE in
"AIX" ) alias bdf="/usr/bin/df -Ik"
        alias ll="/usr/bin/ls -l" ;;
"SunOS") alias bdf="/usr/bin/df -k"
         alias ll="/usr/bin/ls -l"
         alias grep="/usr/xpg4/bin/grep" ;;
esac

if [ "$LOGNAME" != "root" ]
then
	if [ -z "$LOGNAME" ]
	then
		:
	else
        	echo "you must launch this script as root"
        	exit 1
	fi
fi

if [ `bdf /tmp|grep tmp|awk '{print $5}'|tr -d %` -ge 98 ]
then
	echo "File system /tmp is full, before running this job "
	echo "please clear all unecessary files in /tmp"
	exit 1
fi

if [ $# -ne 1 ]
then
        echo "Usage : $0 <instance name>"
        echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
        exit 1
else
        if grep -q "^$1:" /etc/ORATAB
        then
                :
        else
                echo "Instance <$1> does not exist Please check"
                echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
                exit 1
        fi
fi

export SID=$1

export  USER=`grep "^$SID:" /etc/ORATAB|cut -d: -f4`
export  OHOME=`grep "^$SID:" /etc/ORATAB|cut -d: -f2`

if [ -x $OHOME/bin/svrmgrl ]
then
        VAR3=svrmgrl
        export VAR4="connect internal"
else
        VAR3="sqlplus -s  \"/ as sysdba \" "
        export VAR4="set wrap off"
        export VAR5="set lines 500"
fi
## csh or ksh
if grep "^$USER:" /etc/passwd|grep -q csh$
then
        export VAR="setenv ORACLE_SID ${SID};setenv ORACLE_HOME ${OHOME}"
        export VAR2="$OHOME/bin/$VAR3 <<EOF >&/dev/null"
else
        export VAR="export ORACLE_SID=${SID};export ORACLE_HOME=${OHOME}"
        export VAR2="$OHOME/bin/$VAR3 <<EOF 1>/dev/null 2>&1"
fi

##
export SESSIONWAIT=v'\$'session_wait
export PROCESS=v'\$'process
export SESSION=v'\$'session

su - $USER -c "
$VAR
$VAR2
$VAR4
$VAR5
spool /tmp/`basename $0`$$.log

select W.sid,W.seconds_in_wait,P.spid
from $SESSIONWAIT W,$PROCESS P,$SESSION S
where event like 'SQL*Net message from dblink'
and W.wait_time = 0
and W.seconds_in_wait > 1
and P.addr = S.paddr
and S.Sid = W.sid
/
spool off
exit
EOF
" 1>/dev/null 2>&1

grep -v -e "row[s]* select" -e ^SID -e "^----" /tmp/`basename $0`$$.log |while read Nsid Wtime proc
do
	echo "--------------------------------------------------------------------------------------------"
	date
	echo "WAIT TIME from dblink = $Wtime"
	/usr/local/oracle/infoproc $proc
done

rm /tmp/`basename $0`$$.log
