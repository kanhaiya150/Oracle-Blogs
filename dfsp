#!/usr/bin/ksh 
#
# Usage :  dfspace <SID>
#
OSTYPE=$(uname -s)
case $OSTYPE in
"AIX" ) alias bdf="/usr/bin/df -Ik"
        alias ll="/usr/bin/ls -l" ;;
"SunOS") alias bdf="/usr/bin/df -k"
         alias ll="/usr/bin/ls -l"
         alias grep="/usr/xpg4/bin/grep"
         alias awk="/usr/xpg4/bin/awk" ;;
"Linux") alias bdf="/bin/df -k"
         alias ll="ls -l" ;;
esac

IFS=:
if [ -s /etc/ORATAB ]
then
    IFS=:
    grep -v -e "^#" -e "^$" /etc/ORATAB|while read ORACLE_SID ORACLE_HOME FLAG USER VGBKP
    do
export LOG=/tmp/w.$$.log
export version=v'\$'version

su - $USER -c "
sqlplus -S \"/ as sysdba\" << EOF 
set serveroutput on size 999999
set feedback off
set lines 130

declare
  sql_stmt varchar2(300);
  table_or_view_does_not_exist exception;
  PRAGMA EXCEPTION_INIT(table_or_view_does_not_exist, -942);
begin
  sql_stmt := 'drop table fs_usage';
  execute immediate sql_stmt;
  sql_stmt :='create table fs_usage (fs_name varchar2(80) unique, sigma_tbs number default 0)';
  execute immediate sql_stmt;
exception
   when table_or_view_does_not_exist then
   sql_stmt :='create table fs_usage (fs_name varchar2(80) unique, sigma_tbs number default 0)';
   execute immediate sql_stmt;
end;
/

create or replace procedure maj ( r in out varchar2, x in out number, s in out number )
is
begin
	select sigma_tbs into x from fs_usage where fs_name = r ;
	update fs_usage set sigma_tbs=x+s where fs_name = r ;
exception
	when no_data_found
	then
	insert into fs_usage values(r, s);
commit ;
end maj;
/

spool $LOG

declare
  v number ;              -- version
  t char(20):=            'Tbs' ;
  e char(3) ;              -- extend_management
  o char(10):=            'Mngt';
  f char(76):=            'File';
  w char(6) :=            'WMark';
  m char(6) :=            'MaxSz';
  maxsiz number ;          -- maxsize
  free number ;            -- free
  a char(6) :=            'Alloc';
  p char(6) :=            '  %';
  s number  := 0;         -- sigma maxsize des tbs
  r varchar(80):='deb';   -- rupture filesystem
  l number(3,0) ;         -- counter
  x number;
  y number;
begin
  select count(*) into v from $version where banner like 'Oracle9i%' or banner like 'Oracle8i%';
  -- dbms_output.put_line(t||f||w||m||a||p||o);
  -- dbms_output.put_line('----------');
  if v > 0 then
    for i in (select * from dba_tablespaces order by tablespace_name)
    loop
      for j in (select autoextensible, bytes, maxbytes, file_name, file_id
                from dba_data_files where tablespace_name=i.tablespace_name
                union
                select autoextensible, bytes, maxbytes, file_name, file_id
                from dba_temp_files where tablespace_name=i.tablespace_name order by 2)
      loop
            e := substr(i.extent_management,1,3);
            if i.contents = 'TEMPORARY' and e = 'LOC' then
                free := 0;
            else
                select nvl(sum(bytes),0) into free 
                from dba_free_space
                where file_id = j.file_id ;
            end if;
            t := substr(i.tablespace_name,1,20);
            if j.autoextensible = 'YES' then
                o := e||'auto' ;
                maxsiz := j.maxbytes ;
            else
                o := e||'std' ;
                maxsiz := j.bytes ;
            end if;
            f := substr(j.file_name, 1, 64);
            if instr( f, r, 1, 1) > 0 then
                null ;
            else
                if s > 0 then
     			        maj ( r, x, s) ;
                end if;
		y := 4 ; l := 0 ;
		while y > 0 and l = 0
		loop
  	              l:= instr(j.file_name,'/',1,y) ;
		--    dbms_output.put_line('file_name '||j.file_name||' l '||l);
		      y := y - 1;
		end loop;
                r:= substr(j.file_name,1,l) ;
                s:= 0;
            end if;
            w := lpad(to_char(round(j.bytes/1024/1024)),5);
            s := s + maxsiz/1024/1024 ;
            p := lpad(to_char(round(((j.bytes-free)/(maxsiz+1))*100)),3);
            if j.maxbytes > 30000000000 then
               m := 'Unlim' ;
            else
               m := lpad(to_char(round(maxsiz/1024/1024)),5);
            end if ;
            a := lpad(to_char(round((j.bytes-free)/1024/1024)),5);
           -- dbms_output.put_line(t||f||w||m||a||p||o);
      end loop;
    end loop;
    -- dbms_output.put_line('----------');
    maj ( r, x, s) ;
    for k in (select fs_name, sigma_tbs from fs_usage)
    loop
      dbms_output.put_line('fs='||k.fs_name||' SigmaTbs='||round(k.sigma_tbs));
    end loop;
  else
     dbms_output.put_line('version <> 8i-9i');
  end if;
end;
/
spool off
EOF
" >/dev/null
#cat $LOG 

let Sigma=0
grep 'fs=' $LOG |while read line
do
        eval $line
        let Sigma=Sigma+SigmaTbs
done
echo $ORACLE_SID 'Sigma='$Sigma

rm -f $LOG
done
fi
