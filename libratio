#
# library cache hit ratio = % buffers found in cache
# Usage :  libratio <SID>

OSTYPE=$(uname -s)
case $OSTYPE in
"AIX" ) alias bdf="/usr/bin/df -Ik"
        alias ll="/usr/bin/ls -l" ;;
"SunOS") alias bdf="/usr/bin/df -k"
         alias ll="/usr/bin/ls -l"
         alias grep="/usr/xpg4/bin/grep" ;;
esac


if [ "$LOGNAME" != "root" ]
then
	if [ -z "$LOGNAME" ]
	then
		:
	else
        	echo "you must launch this script as root"
        	exit 1
	fi
fi

if [ `bdf /tmp|grep tmp|awk '{print $5}'|tr -d %` -ge 98 ]
then
	echo "File system /tmp is full, before running this job "
	echo "please clear all unecessary files in /tmp"
	exit 1
fi


if [ $# -ne 1 ]
then
        echo "Usage : $0 <instance name>"
        echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
        exit 1
else
        if grep -q "^$1:" /etc/ORATAB
        then
                echo "\nInstance $1 exists in /etc/ORATAB\n"
        else
                echo "Instance <$1> does not exist Please check"
                echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
                exit 1
        fi
fi

export SID=$1

export  USER=`grep "^$SID:" /etc/ORATAB|cut -d: -f4`
export  ORACLE_HOME=`grep "^$SID:" /etc/ORATAB|cut -d: -f2`

## csh or ksh
if grep "^$USER:" /etc/passwd|grep -q csh$
then
        export VAR="setenv ORACLE_SID ${SID}"
        export VAR2="$ORACLE_HOME/bin/svrmgrl <<EOF >&/dev/null"
else
        export VAR="ORACLE_SID=${SID};export ORACLE_SID"
        export VAR2="$ORACLE_HOME/bin/svrmgrl <<EOF 1>/dev/null 2>&1"
fi

##
export LIBRARYCACHE=v'\$'librarycache

su - $USER -c "
$VAR
$VAR2
connect internal
spool /tmp/`basename $0`.log

SELECT sum(pins) \"Executions\",
	sum(reloads) \"Cache Misses\",
	100-round(sum(reloads)/sum(pins),2) \"Lib. Cache Hit Ratio\"
FROM   $LIBRARYCACHE
/
spool off
exit
EOF
"
pg /tmp/`basename $0`.log
rm /tmp/`basename $0`.log
