#
# Script intended to display the nb of blocking locks
# Returns per option (name of the process) 1 if down, 0 if OK (running)
#
#
# Usage : $0 monitor_name
#

if [ -s /etc/PATH ]
then export PATH=$PATH:`cat /etc/PATH`
fi


# scans Oracle config by reading each line of /etc/ORATAB
if [ -s /etc/ORATAB ]
then
     # Set up environment variables
     LOG=/tmp/`basename $0`.log
     rm -f $LOG

     IFS=:
     grep -v -e "^#" -e "^$" /etc/ORATAB|while read SID ORACLE_HOME FLAG USER
     do
   	     if [[ $FLAG = "Y" ]]
       	     then

                     ## svrmgrl or sqldba
     
               	     if [[ -x $ORACLE_HOME/bin/svrmgrl ]]
               	     then
               		     SQLMGR=svrmgrl
               	     else
                             if [[ -x $ORACLE_HOME/bin/sqldba ]]
                             then
               		           SQLMGR="sqldba lmode=y"
                             else
                                   :
                                   #ORACLE_HOME $ORACLE_HOME non existent or empty\n\n"
                             fi
               	     fi

                     ## csh or ksh
                     if grep "^$USER:" /etc/passwd|grep csh$
                     then
                             export VAR="setenv ORACLE_SID ${SID}"
                             export VAR2=" $ORACLE_HOME/bin/$SQLMGR <<EOF >&/dev/null"
                     else
                             export VAR="ORACLE_SID=${SID};export ORACLE_SID"
                             export VAR2="$ORACLE_HOME/bin/$SQLMGR <<EOF 1>/dev/null 2>&1"
                     fi
             
                     ##
export SESSION=v'\$'session
export LCKOBJ=v'\$'locked_object
             
		     su - $USER -c "
		     $VAR
		     $VAR2
                     connect internal
set echo off
set termout off
spool $LOG
drop table lock_holders;

create table LOCK_HOLDERS   /* temporary table */
(
  waiting_session   number,
  holding_session   number,
  lock_type         varchar2(26),
  mode_held         varchar2(14),
  mode_requested    varchar2(14),
  lock_id1          varchar2(22),
  lock_id2          varchar2(22)
);

drop   table dba_locks_temp;
create table dba_locks_temp as select * from dba_locks;

insert into lock_holders
select w.session_id,
        h.session_id,
        w.lock_type,
        h.mode_held,
        w.mode_requested,
        w.lock_id1,
        w.lock_id2
  from dba_locks_temp w, dba_locks_temp h
where h.mode_held      !=  'None'
  and  h.mode_held      !=  'Null'
  and  w.mode_requested !=  'None'
  and  w.lock_type       =  h.lock_type
  and  w.lock_id1        =  h.lock_id1
  and  w.lock_id2        =  h.lock_id2;

commit;
drop table dba_locks_temp;

insert into lock_holders
  select holding_session, null, 'None', null, null, null, null
    from lock_holders
 minus
  select waiting_session, null, 'None', null, null, null, null
    from lock_holders;
commit;

drop table sortie;
create table sortie
(
 waiting_session   number,
  holding_session   number,
  lock_id1          varchar2(22),
  lock_id2          varchar2(22),
  lock_type         varchar2(26),
  mode_held         varchar2(14),
  mode_requested    varchar2(14),
  username          varchar2(30),
  osuser            varchar2(15),
  process           varchar2(9),
  machine           varchar2(64),
  object_name       varchar2(30),
  object_id         number,
  object_type       varchar2(12)
);

insert into sortie
select  L.waiting_session,
        L.holding_session,
        L.lock_id1,
        L.lock_id2,
        L.lock_type,
        L.mode_held,
        L.mode_requested,
        S.username,
        S.osuser,
        S.process,
        S.machine,
        N.object_name,
        O.object_id,
        N.object_type
 from lock_holders L, $SESSION S, $LCKOBJ O, all_objects N
where L.waiting_session = S.SID
and S.SID=O.session_id
and O.object_id=N.object_id
;
commit;
set charwidth 14;

/* Print out the result in a tree structured fashion */
select  lpad(' ',3*(level-1)) || waiting_session waiting_session,
        lock_type,
        mode_requested,
        mode_held,
        process,
        osuser,
        machine,
        username,
        object_name,
        object_type
 from sortie
connect by  prior waiting_session = holding_session
  start with holding_session is null;

drop table lock_holders;
drop table sortie;
spool off
exit
EOF
"
NBLOCK=`grep "rows " $LOG|tail -1 |awk '{print$1}'`
echo $NBLOCK
     
                     fi

		     IFS=:
     done
     unset IFS

else
     # File /etc/ORATAB is missing, Oracle check is not possible
     # Check if sun gateways
	:
fi    


# returns 0 (everything OK), if script error or Oracle not installed
opcmon $1=0
