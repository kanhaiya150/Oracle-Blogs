#!/usr/bin/ksh
#
#
# nber of log generated per hour
# Usage :  archlog <sid>

OSTYPE=$(uname -s)
case $OSTYPE in
"AIX" ) alias bdf="/usr/bin/df -Ik"
        alias ll="/usr/bin/ls -l" ;;
"SunOS") alias bdf="/usr/bin/df -k"
         alias ll="/usr/bin/ls -l"
         alias grep="/usr/xpg4/bin/grep" ;;
esac


if [ "$LOGNAME" != "root" ]
then
	if [ -z "$LOGNAME" ]
	then
		:
	else
        	echo "you must launch this script as root"
        	exit 1
	fi
fi

if [ `bdf /tmp|grep tmp|awk '{print $5}'|tr -d %` -ge 98 ]
then
	echo "File system /tmp is full, before running this job "
	echo "please clear all unecessary files in /tmp"
	exit 1
fi

if [ $# -eq 0 ]
then
        echo "Usage : $0 <instance name> <spid>"
        echo "Usage : <spid> is optional"
        echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
        exit 1
else
        if grep -q "^$1:" /etc/ORATAB
        then
                echo "\nInstance $1 exists in /etc/ORATAB\n"
        else
                echo "Instance <$1> does not exist Please check"
                echo "List of existing instances : \n`grep -v -e "^#" -e "^$" /etc/ORATAB|cut -f1 -d:`"
                exit 1
        fi
fi

export SID=$1
export  USER=`grep "^$SID:" /etc/ORATAB|cut -d: -f4`
export  OHOME=`grep "^$SID:" /etc/ORATAB|cut -d: -f2`

if [ -x $OHOME/bin/svrmgrl ]
then
        VAR3=svrmgrl
        export VAR4="connect internal"
else
        VAR3="sqlplus -s  \"/ as sysdba \" "
        export VAR4="set wrap off"
        export VAR5="set lines 80"
fi
## csh or ksh
if grep "^$USER:" /etc/passwd|grep -q csh$
then
        export VAR="setenv ORACLE_SID ${SID};setenv ORACLE_HOME ${OHOME}"
        export VAR2="$OHOME/bin/$VAR3 <<EOF >&/dev/null"
else
        export VAR="ORACLE_SID=${SID};ORACLE_HOME=${OHOME};export ORACLE_SID ORACLE_HOME"
        export VAR2="$OHOME/bin/$VAR3 <<EOF 1>/dev/null 2>&1"
fi

export LOGHIST=v'\$'log_history

if [ $# -ne 1 ]
then
  if [ $2 != "" ]
  then
    export AND="and p.spid='$2'"
  fi
fi

##
su - $USER -c "
$VAR
$VAR2
$VAR4
$VAR5
spool /tmp/`basename $0`.log
select time,count(*)
from (select to_char(first_time,'dd-mon-yyyy hh24')||':00:00' as time,sequence#
from $LOGHIST)
group by time;
spool off
exit;
EOF
" 1>/dev/null 2>&1

cat /tmp/`basename $0`.log
rm /tmp/`basename $0`.log
